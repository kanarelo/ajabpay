"""empty message

Revision ID: 294c806c30ac
Revises: None
Create Date: 2016-09-14 22:57:13.791531

"""

# revision identifiers, used by Alembic.
revision = '294c806c30ac'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('configtransactiontype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('configtransactionstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('configledgeraccountcategory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('configsmstemplate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.Column('template', sa.String(length=160), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('configaccountstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('configsmsgateway',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('configexchangerate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('local_currency', sa.String(length=3), nullable=True),
    sa.Column('foreign_currency', sa.String(length=3), nullable=True),
    sa.Column('buying', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('selling', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('configpaypalapiaccount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_id', sa.String(length=100), nullable=True),
    sa.Column('private_key', sa.String(length=100), nullable=True),
    sa.Column('credit_card_enabled', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('configproducttype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('configcurrency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('smsmessage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_type', sa.Integer(), nullable=True),
    sa.Column('message_text', sa.String(length=160), nullable=True),
    sa.Column('message_recipient', sa.String(length=15), nullable=True),
    sa.Column('sms_gateway_id', sa.Integer(), nullable=True),
    sa.Column('sms_template_id', sa.Integer(), nullable=True),
    sa.Column('delivered', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['sms_gateway_id'], ['configsmsgateway.id'], ),
    sa.ForeignKeyConstraint(['sms_template_id'], ['configsmstemplate.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('configledgeraccount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.Column('account_category_id', sa.Integer(), nullable=True),
    sa.Column('balance_direction', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_category_id'], ['configledgeraccountcategory.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('product_type_id', sa.Integer(), nullable=True),
    sa.Column('amount_currency_id', sa.Integer(), nullable=True),
    sa.Column('txn_withdrawal_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('txn_deposit_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('daily_withdraw_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('daily_deposit_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('weekly_withdraw_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('weekly_deposit_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('monthly_withdraw_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('monthly_deposit_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('yearly_withdraw_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('yearly_deposit_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('date_updated', sa.Date(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['amount_currency_id'], ['configcurrency.id'], ),
    sa.ForeignKeyConstraint(['product_type_id'], ['configproducttype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_number', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=400), nullable=True),
    sa.Column('account_status_date', sa.Date(), nullable=True),
    sa.Column('txn_withdraw_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('txn_deposit_limit', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('total_withdraws', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('total_deposits', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('last_deposit_date', sa.Date(), nullable=True),
    sa.Column('last_withdraw_date', sa.Date(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.Column('date_updated', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_number')
    )
    op.create_table('configledgeraccountingrule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_type_id', sa.Integer(), nullable=True),
    sa.Column('debit_account_id', sa.Integer(), nullable=True),
    sa.Column('credit_account_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['credit_account_id'], ['configledgeraccount.id'], ),
    sa.ForeignKeyConstraint(['debit_account_id'], ['configledgeraccount.id'], ),
    sa.ForeignKeyConstraint(['transaction_type_id'], ['configtransactiontype.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accountstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(length=140), nullable=True),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['approved_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['configaccountstatus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paypalprofile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('payer_id', sa.String(length=20), nullable=True),
    sa.Column('paypal_user_id', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('given_name', sa.String(length=100), nullable=True),
    sa.Column('family_name', sa.String(length=100), nullable=True),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=1), nullable=True),
    sa.Column('phone_number', sa.String(length=100), nullable=True),
    sa.Column('age_range', sa.String(length=10), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_account', sa.Boolean(), nullable=True),
    sa.Column('account_type', sa.String(length=10), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.Column('date_updated', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('payer_id'),
    sa.UniqueConstraint('paypal_user_id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_no', sa.String(length=100), nullable=True),
    sa.Column('transaction_type_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('reversing_transaction_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('details', sa.String(length=255), nullable=True),
    sa.Column('notified', sa.Boolean(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('status_date', sa.Date(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['configcurrency.id'], ),
    sa.ForeignKeyConstraint(['reversing_transaction_id'], ['transaction.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['configtransactionstatus.id'], ),
    sa.ForeignKeyConstraint(['transaction_type_id'], ['configtransactiontype.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_no')
    )
    op.create_table('transactionentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('ledger_account_id', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.Integer(), nullable=True),
    sa.Column('balance_increment', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['ledger_account_id'], ['configledgeraccount.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paypaladdress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paypal_profile_id', sa.Integer(), nullable=True),
    sa.Column('street_address', sa.String(length=100), nullable=True),
    sa.Column('locality', sa.String(length=50), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=15), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['paypal_profile_id'], ['paypalprofile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mpesatransaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mpesa_transaction_no', sa.String(length=100), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mpesa_transaction_no')
    )
    op.create_table('paypaltoken',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paypal_profile_id', sa.Integer(), nullable=True),
    sa.Column('scope', sa.String(length=100), nullable=True),
    sa.Column('access_token', sa.String(length=255), nullable=True),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('token_type', sa.String(length=15), nullable=True),
    sa.Column('expires_in', sa.Integer(), nullable=True),
    sa.Column('exires_at', sa.Date(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['paypal_profile_id'], ['paypalprofile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paypaltransaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paypal_transaction_id', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.Date(), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('intent', sa.String(length=20), nullable=True),
    sa.Column('payment_method', sa.String(length=20), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paypal_transaction_id')
    )
    op.create_table('transactionstatus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('transaction_status_date', sa.Date(), nullable=True),
    sa.Column('details', sa.String(length=400), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['configtransactionstatus.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactionstatus')
    op.drop_table('paypaltransaction')
    op.drop_table('paypaltoken')
    op.drop_table('mpesatransaction')
    op.drop_table('paypaladdress')
    op.drop_table('transactionentry')
    op.drop_table('transaction')
    op.drop_table('paypalprofile')
    op.drop_table('accountstatus')
    op.drop_table('configledgeraccountingrule')
    op.drop_table('account')
    op.drop_table('product')
    op.drop_table('configledgeraccount')
    op.drop_table('smsmessage')
    op.drop_table('configcurrency')
    op.drop_table('configproducttype')
    op.drop_table('configpaypalapiaccount')
    op.drop_table('configexchangerate')
    op.drop_table('configsmsgateway')
    op.drop_table('configaccountstatus')
    op.drop_table('configsmstemplate')
    op.drop_table('configledgeraccountcategory')
    op.drop_table('configtransactionstatus')
    op.drop_table('configtransactiontype')
    op.drop_table('user')
    ### end Alembic commands ###
